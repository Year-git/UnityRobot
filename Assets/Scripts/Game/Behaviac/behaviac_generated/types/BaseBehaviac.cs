// -------------------------------------------------------------------------------
// THIS FILE IS ORIGINALLY GENERATED BY THE DESIGNER.
// YOU ARE ONLY ALLOWED TO MODIFY CODE BETWEEN '///<<< BEGIN' AND '///<<< END'.
// PLEASE MODIFY AND REGENERETE IT IN THE DESIGNER FOR CLASS/MEMBERS/METHODS, ETC.
// -------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;

///<<< BEGIN WRITING YOUR CODE FILE_INIT

///<<< END WRITING YOUR CODE

public class BaseBehaviac : behaviac.Agent
///<<< BEGIN WRITING YOUR CODE BaseBehaviac
///<<< END WRITING YOUR CODE
{
	public void MapLevelEnd(bool bSuc)
	{
///<<< BEGIN WRITING YOUR CODE MapLevelEnd
		MapManager.Instance.baseMap.MapLevelEnd(bSuc);
///<<< END WRITING YOUR CODE
	}

	public void NpcBuffAdd(int nNpcInstId, int nBuffCfgId)
	{
///<<< BEGIN WRITING YOUR CODE NpcBuffAdd
		this.myControlloer.NpcBuffAdd(nNpcInstId, nBuffCfgId);
///<<< END WRITING YOUR CODE
	}

	public int AddNpcBodyEffect(int nNpcInstId, int nEffId)
	{
///<<< BEGIN WRITING YOUR CODE AddNpcBodyEffect
		return this.myControlloer.AddNpcBodyEffect(nNpcInstId, nEffId);
///<<< END WRITING YOUR CODE
	}

	public void NpcBuffRemove(int nNpcInstId, int nBuffCfgId)
	{
///<<< BEGIN WRITING YOUR CODE NpcBuffRemove
		this.myControlloer.NpcBuffRemove(nNpcInstId, nBuffCfgId);
///<<< END WRITING YOUR CODE
	}

	public void NpcTreatmentPercentInput(int nNpcInstId, int nTreatmentPercent)
	{
///<<< BEGIN WRITING YOUR CODE NpcTreatmentPercentInput
		this.myControlloer.NpcTreatmentPercentInput(nNpcInstId, nTreatmentPercent);
///<<< END WRITING YOUR CODE
	}

	public void NpcTreatmentInput(int nNpcInstId, int nTreatmentVal)
	{
///<<< BEGIN WRITING YOUR CODE NpcTreatmentInput
		this.myControlloer.NpcTreatmentInput(nNpcInstId, nTreatmentVal);
///<<< END WRITING YOUR CODE
	}

	public int GetRandomIdxByWeight(List<int> pArrayInt)
	{
///<<< BEGIN WRITING YOUR CODE GetRandomIdxByWeight
		return CommFunc.GetRandomIdxByWeight(pArrayInt);
///<<< END WRITING YOUR CODE
	}

	public bool IsNpcDead(int nNpcInstId)
	{
///<<< BEGIN WRITING YOUR CODE IsNpcDead
		return false;
///<<< END WRITING YOUR CODE
	}

	public string GetCurCallTreeName()
	{
///<<< BEGIN WRITING YOUR CODE GetCurCallTreeName
		return this.myControlloer.GetCurCallTreeName();
///<<< END WRITING YOUR CODE
	}

	public bool IsLevelNpcAllEnableByName0(int nNameId)
	{
///<<< BEGIN WRITING YOUR CODE IsLevelNpcAllEnableByName0
		return MapManager.Instance.baseMap.levelNpcManager.IsLevelNpcAllEnableByName(nNameId.ToString());
///<<< END WRITING YOUR CODE
	}

	public bool GetLevelNpcAllDead0(int nNameId)
	{
///<<< BEGIN WRITING YOUR CODE GetLevelNpcAllDead0
		return MapManager.Instance.baseMap.levelNpcManager.GetLevelNpcIsAllDead(nNameId.ToString());
///<<< END WRITING YOUR CODE
	}

	public bool IsLevelTrapAllEnableByName0(int nNameId)
	{
///<<< BEGIN WRITING YOUR CODE IsLevelTrapAllEnableByName0
		return MapManager.Instance.baseMap.levelTrapManager.IsLevelTrapAllEnableByName(nNameId.ToString());
///<<< END WRITING YOUR CODE
	}

	public bool GetEventParamBool(int nIdx)
	{
///<<< BEGIN WRITING YOUR CODE GetEventParamBool
		return this.myControlloer.GetEventParamBool(nIdx);
///<<< END WRITING YOUR CODE
	}

	public int GetEventParamInt(int nIdx)
	{
///<<< BEGIN WRITING YOUR CODE GetEventParamInt
		return this.myControlloer.GetEventParamInt(nIdx);
///<<< END WRITING YOUR CODE
	}

	public string GetEventParamString(int nIdx)
	{
///<<< BEGIN WRITING YOUR CODE GetEventParamString
		return this.myControlloer.GetEventParamString(nIdx);
///<<< END WRITING YOUR CODE
	}

	public int GetRandomValByRange(int nMin, int nMax)
	{
///<<< BEGIN WRITING YOUR CODE GetRandomValByRange
		return SeedRandom.Range(nMin, nMax);
///<<< END WRITING YOUR CODE
	}

	public int GetPlayerNpcInstId()
	{
///<<< BEGIN WRITING YOUR CODE GetPlayerNpcInstId
		return this.myControlloer.GetPlayerNpcInstId();
///<<< END WRITING YOUR CODE
	}

	public bool IsPlayerNpcDead()
	{
///<<< BEGIN WRITING YOUR CODE IsPlayerNpcDead
		return this.myControlloer.IsPlayerNpcDead();
///<<< END WRITING YOUR CODE
	}

	public int GetFrameSynRunTime()
	{
///<<< BEGIN WRITING YOUR CODE GetFrameSynRunTime
		return FrameSynchronManager.Instance.fsData.FrameRunningTime;
///<<< END WRITING YOUR CODE
	}

	public void DelEffect(int nEffInstId)
	{
///<<< BEGIN WRITING YOUR CODE DelEffect
		MapManager.Instance.baseMap.effectManager.EffectDel(nEffInstId);
///<<< END WRITING YOUR CODE
	}

	public void SetLevelNpcEnableByName0(int nNameId, bool bEnable)
	{
///<<< BEGIN WRITING YOUR CODE SetLevelNpcEnableByName0
		MapManager.Instance.baseMap.levelNpcManager.SetLevelNpcEnableByName(nNameId.ToString(), bEnable);
///<<< END WRITING YOUR CODE
	}

	public void SetLevelTrapEnableByName0(int nNameId, bool nEnable)
	{
///<<< BEGIN WRITING YOUR CODE SetLevelTrapEnableByName0
		MapManager.Instance.baseMap.levelTrapManager.SetLevelTrapEnableByName(nNameId.ToString(), nEnable);
///<<< END WRITING YOUR CODE
	}

	public bool IsNpcLastPercentHp(int nNpcInstId, int nPercentVal)
	{
///<<< BEGIN WRITING YOUR CODE IsNpcLastPercentHp
		return this.myControlloer.IsNpcLastPercentHp(nNpcInstId, nPercentVal);
///<<< END WRITING YOUR CODE
	}

	public bool IsMonsterNpc(int nNpcInstId)
	{
///<<< BEGIN WRITING YOUR CODE IsMonsterNpc
		return this.myControlloer.IsMonsterNpc(nNpcInstId);
///<<< END WRITING YOUR CODE
	}

	public bool IsBuildNpc(int nNpcInstId)
	{
///<<< BEGIN WRITING YOUR CODE IsBuildNpc
		return this.myControlloer.IsBuildNpc(nNpcInstId);
///<<< END WRITING YOUR CODE
	}

	public bool IsPlayerNpc(int nNpcInstId)
	{
///<<< BEGIN WRITING YOUR CODE IsPlayerNpc
		return this.myControlloer.IsPlayerNpc(nNpcInstId);
///<<< END WRITING YOUR CODE
	}

	public bool IsCurCallType(BehaviacCallType eType)
	{
///<<< BEGIN WRITING YOUR CODE IsCurCallType
		return this.myControlloer.IsCurCallType(eType);
///<<< END WRITING YOUR CODE
	}

	public bool IsTargetGameEvent(BehaviacGameEvent eType)
	{
///<<< BEGIN WRITING YOUR CODE IsTargetGameEvent
		return this.myControlloer.IsTargetGameEvent(eType);
///<<< END WRITING YOUR CODE
	}

	public void PrintLog(string sString, int nInt0, int nInt1, int nInt2, int nInt3, int nInt4)
	{
///<<< BEGIN WRITING YOUR CODE PrintLog
		if (UnityEngine.Application.platform == UnityEngine.RuntimePlatform.WindowsEditor)
		{
			UnityEngine.Debug.Log(
				"PrintLog->" + "#TreeName = " + this.myControlloer.curCallBehaviacTreePath + this.myControlloer.curCallBehaviacTreeName + 
				"#Name = " + this.gameObject.name + 
				"#Time = " + FrameSynchronManager.Instance.fsData.FrameRunningTime + 
				"#sString = " + sString + 
				"#nInt0 = " + nInt0 + 
				"#nInt1 = " + nInt1 + 
				"#nInt2 = " + nInt2 + 
				"#nInt3 = " + nInt3 + 
				"#nInt4 = " + nInt4
			);
		}
///<<< END WRITING YOUR CODE
	}

	public int AddNpcToMapByPoint(int nCfgId, string sPointName)
	{
///<<< BEGIN WRITING YOUR CODE AddNpcToMapByPoint
		return this.myControlloer.AddNpcToMapByPoint(nCfgId, sPointName);
///<<< END WRITING YOUR CODE
	}

	public int AddNpcToMapByPos(int nCfgId, float nPosX, float nPosY, float nPosZ, float nRotX, float nRotY, float nRotZ)
	{
///<<< BEGIN WRITING YOUR CODE AddNpcToMapByPos
		return this.myControlloer.AddNpcToMapByPos(nCfgId, nPosX, nPosY, nPosZ, nRotX, nRotY, nRotZ);
///<<< END WRITING YOUR CODE
	}

///<<< BEGIN WRITING YOUR CODE CLASS_PART
	/// <summary>
	/// 归属的控制器
	/// </summary>
	/// <value></value>
	public BaseBehaviacController myControlloer{get; set;}
///<<< END WRITING YOUR CODE

}

///<<< BEGIN WRITING YOUR CODE FILE_UNINIT

///<<< END WRITING YOUR CODE

