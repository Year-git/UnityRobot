//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaTimerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("LuaTimer");
		L.RegFunction("CreateOnceTimer", CreateOnceTimer);
		L.RegFunction("CreateLoopTimer", CreateLoopTimer);
		L.RegFunction("StopTimer", StopTimer);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateOnceTimer(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 2);
			object[] arg2 = ToLua.ToParamsObject(L, 3, count - 2);
			Framework.Timer o = LuaTimer.CreateOnceTimer(arg0, arg1, arg2);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateLoopTimer(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 2);
			object[] arg2 = ToLua.ToParamsObject(L, 3, count - 2);
			Framework.Timer o = LuaTimer.CreateLoopTimer(arg0, arg1, arg2);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopTimer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Framework.Timer arg0 = (Framework.Timer)ToLua.CheckObject<Framework.Timer>(L, 1);
			LuaTimer.StopTimer(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

