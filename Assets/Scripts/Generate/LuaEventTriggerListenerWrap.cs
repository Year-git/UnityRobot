//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaEventTriggerListenerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("LuaEventTriggerListener");
		L.RegFunction("OnClick", OnClick);
		L.RegFunction("MousePosInView", MousePosInView);
		L.RegFunction("OnDown", OnDown);
		L.RegFunction("OnUp", OnUp);
		L.RegFunction("OnEnter", OnEnter);
		L.RegFunction("OnExit", OnExit);
		L.RegFunction("OnSelect", OnSelect);
		L.RegFunction("OnUpdateSelect", OnUpdateSelect);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnClick(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 2);
				LuaEventTriggerListener.OnClick(arg0, arg1);
				return 0;
			}
			else if (count == 3)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 2);
				LuaTable arg2 = ToLua.CheckLuaTable(L, 3);
				LuaEventTriggerListener.OnClick(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaEventTriggerListener.OnClick");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MousePosInView(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				UnityEngine.Vector3 o = LuaEventTriggerListener.MousePosInView();
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 1)
			{
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
				UnityEngine.Vector3 o = LuaEventTriggerListener.MousePosInView(arg0);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaEventTriggerListener.MousePosInView");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDown(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 2);
				LuaEventTriggerListener.OnDown(arg0, arg1);
				return 0;
			}
			else if (count == 3)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 2);
				LuaTable arg2 = ToLua.CheckLuaTable(L, 3);
				LuaEventTriggerListener.OnDown(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaEventTriggerListener.OnDown");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnUp(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 2);
				LuaEventTriggerListener.OnUp(arg0, arg1);
				return 0;
			}
			else if (count == 3)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 2);
				LuaTable arg2 = ToLua.CheckLuaTable(L, 3);
				LuaEventTriggerListener.OnUp(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaEventTriggerListener.OnUp");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnEnter(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 2);
				LuaEventTriggerListener.OnEnter(arg0, arg1);
				return 0;
			}
			else if (count == 3)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 2);
				LuaTable arg2 = ToLua.CheckLuaTable(L, 3);
				LuaEventTriggerListener.OnEnter(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaEventTriggerListener.OnEnter");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnExit(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 2);
				LuaEventTriggerListener.OnExit(arg0, arg1);
				return 0;
			}
			else if (count == 3)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 2);
				LuaTable arg2 = ToLua.CheckLuaTable(L, 3);
				LuaEventTriggerListener.OnExit(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaEventTriggerListener.OnExit");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnSelect(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 2);
				LuaEventTriggerListener.OnSelect(arg0, arg1);
				return 0;
			}
			else if (count == 3)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 2);
				LuaTable arg2 = ToLua.CheckLuaTable(L, 3);
				LuaEventTriggerListener.OnSelect(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaEventTriggerListener.OnSelect");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnUpdateSelect(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 2);
				LuaEventTriggerListener.OnUpdateSelect(arg0, arg1);
				return 0;
			}
			else if (count == 3)
			{
				UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 1, typeof(UnityEngine.GameObject));
				LuaFunction arg1 = ToLua.CheckLuaFunction(L, 2);
				LuaTable arg2 = ToLua.CheckLuaTable(L, 3);
				LuaEventTriggerListener.OnUpdateSelect(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: LuaEventTriggerListener.OnUpdateSelect");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

