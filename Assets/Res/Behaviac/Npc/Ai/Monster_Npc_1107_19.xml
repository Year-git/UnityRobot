<?xml version="1.0" encoding="utf-8"?>
<!--EXPORTED BY TOOL, DON'T MODIFY IT!-->
<!--Source File: Npc\Ai\Monster_Npc_1107_19.xml-->
<behavior name="Npc/Ai/Monster_Npc_1107_19" agenttype="NpcBehaviac" version="5">
  <pars>
    <par name="Array01" type="vector&lt;int&gt;" value="0:" />
    <par name="Array04" type="vector&lt;int&gt;" value="0:" />
    <par name="Array05" type="vector&lt;int&gt;" value="0:" />
    <par name="Array06" type="vector&lt;int&gt;" value="0:" />
    <par name="Array07" type="vector&lt;int&gt;" value="0:" />
    <par name="Bool01" type="bool" value="false" />
    <par name="Int01" type="int" value="0" />
    <par name="Int03" type="int" value="0" />
    <par name="Int04" type="int" value="0" />
    <par name="Int05" type="int" value="0" />
    <par name="Array08" type="vector&lt;int&gt;" value="0:" />
  </pars>
  <node class="Selector" id="0">
    <node class="IfElse" id="29">
      <attachment class="Precondition" id="2" flag="precondition">
        <property BinaryOperator="And" />
        <property Operator="Equal" />
        <property Opl="Self.BaseBehaviac::IsCurCallType(Update)" />
        <property Opr2="const bool true" />
        <property Phase="Enter" />
      </attachment>
      <node class="Condition" id="3">
        <property Operator="Equal" />
        <property Opl="bool Self.NpcBehaviac::Bool01" />
        <property Opr="const bool true" />
      </node>
      <node class="ReferencedBehavior" id="31">
        <property ReferenceBehavior="const string &quot;Npc/Ai/Comm_CircularMove&quot;" />
        <property Task="Self.BaseBehaviac::TaskArrayIntRef(vector&lt;int&gt; Self.NpcBehaviac::Array05)" />
      </node>
      <node class="Sequence" id="11">
        <node class="IfElse" id="15">
          <node class="Condition" id="16">
            <property Operator="Equal" />
            <property Opl="Self.NpcBehaviac::IsInRangeOfPlayerNpc(int Self.NpcBehaviac::Array08[4])" />
            <property Opr="const bool true" />
          </node>
          <node class="IfElse" id="24">
            <node class="Condition" id="57">
              <property Operator="GreaterEqual" />
              <property Opl="Self.BaseBehaviac::GetFrameSynRunTime()" />
              <property Opr="int Self.NpcBehaviac::Array08[5]" />
            </node>
            <node class="Sequence" id="58">
              <node class="Action" id="61">
                <property Method="Self.NpcBehaviac::DoSkill(int Self.NpcBehaviac::Array08[1])" />
                <property ResultOption="BT_SUCCESS" />
              </node>
              <node class="Compute" id="63">
                <property Operator="Add" />
                <property Opl="int Self.NpcBehaviac::Array08[5]" />
                <property Opr1="int Self.NpcBehaviac::Array08[2]" />
                <property Opr2="Self.BaseBehaviac::GetFrameSynRunTime()" />
              </node>
            </node>
            <node class="Noop" id="60" />
          </node>
          <node class="Noop" id="28" />
        </node>
        <node class="IfElse" id="6">
          <node class="Condition" id="5">
            <property Operator="Equal" />
            <property Opl="Self.BaseBehaviac::IsPlayerNpcDead()" />
            <property Opr="const bool true" />
          </node>
          <node class="Assignment" id="12">
            <property CastRight="false" />
            <property Opl="bool Self.NpcBehaviac::Bool01" />
            <property Opr="const bool true" />
          </node>
          <node class="IfElse" id="103">
            <node class="Condition" id="105">
              <property Operator="Equal" />
              <property Opl="int Self.NpcBehaviac::Array06[0]" />
              <property Opr="const int 1" />
            </node>
            <node class="ReferencedBehavior" id="107">
              <property ReferenceBehavior="const string &quot;Npc/Ai/Comm_RandomMove&quot;" />
              <property Task="Self.BaseBehaviac::TaskArrayIntRef(vector&lt;int&gt; Self.NpcBehaviac::Array06)" />
            </node>
            <node class="IfElse" id="59">
              <node class="Condition" id="62">
                <property Operator="Equal" />
                <property Opl="int Self.NpcBehaviac::Array01[9]" />
                <property Opr="const int 1" />
              </node>
              <node class="Sequence" id="85">
                <node class="ReferencedBehavior" id="86">
                  <property ReferenceBehavior="const string &quot;Npc/Ai/Monster_Npc_Skill_05&quot;" />
                  <property Task="Self.BaseBehaviac::TaskArrayIntRef(vector&lt;int&gt; Self.NpcBehaviac::Array01)" />
                </node>
                <node class="IfElse" id="73">
                  <node class="Condition" id="74">
                    <property Operator="Equal" />
                    <property Opl="int Self.NpcBehaviac::Array01[21]" />
                    <property Opr="const int 1" />
                  </node>
                  <node class="Action" id="1">
                    <property Method="Self.NpcBehaviac::MoveStop()" />
                    <property ResultOption="BT_SUCCESS" />
                  </node>
                  <node class="Noop" id="79" />
                </node>
              </node>
              <node class="IfElse" id="13">
                <node class="Condition" id="14">
                  <property Operator="Equal" />
                  <property Opl="Self.NpcBehaviac::IsInRangeOfPlayerNpc(int Self.NpcBehaviac::Int01)" />
                  <property Opr="const bool true" />
                </node>
                <node class="IfElse" id="30">
                  <node class="Condition" id="33">
                    <property Operator="GreaterEqual" />
                    <property Opl="Self.BaseBehaviac::GetFrameSynRunTime()" />
                    <property Opr="int Self.NpcBehaviac::Array01[13]" />
                  </node>
                  <node class="IfElse" id="35">
                    <node class="And" id="36">
                      <node class="Condition" id="37">
                        <property Operator="Equal" />
                        <property Opl="Self.NpcBehaviac::IsInRangeOfPlayerNpc(int Self.NpcBehaviac::Array01[6])" />
                        <property Opr="const bool false" />
                      </node>
                      <node class="Condition" id="38">
                        <property Operator="Equal" />
                        <property Opl="Self.NpcBehaviac::IsInRangeOfPlayerNpc(int Self.NpcBehaviac::Array01[7])" />
                        <property Opr="const bool true" />
                      </node>
                    </node>
                    <node class="IfElse" id="39">
                      <node class="Condition" id="40">
                        <property Operator="Equal" />
                        <property Opl="Self.NpcBehaviac::IsLookAtPlayer(int Self.NpcBehaviac::Int03)" />
                        <property Opr="const bool true" />
                      </node>
                      <node class="Sequence" id="41">
                        <node class="Assignment" id="42">
                          <property CastRight="false" />
                          <property Opl="int Self.NpcBehaviac::Array01[9]" />
                          <property Opr="const int 1" />
                        </node>
                        <node class="Assignment" id="55">
                          <property CastRight="false" />
                          <property Opl="int Self.NpcBehaviac::Array01[15]" />
                          <property Opr="const int 1" />
                        </node>
                      </node>
                      <node class="Sequence" id="44">
                        <node class="Action" id="45">
                          <property Method="Self.NpcBehaviac::TurnToPlayer()" />
                          <property ResultOption="BT_SUCCESS" />
                        </node>
                        <node class="Action" id="46">
                          <property Method="Self.NpcBehaviac::MoveStop()" />
                          <property ResultOption="BT_SUCCESS" />
                        </node>
                      </node>
                    </node>
                    <node class="IfElse" id="47">
                      <node class="Condition" id="48">
                        <property Operator="Equal" />
                        <property Opl="Self.NpcBehaviac::IsInRangeOfPlayerNpc(int Self.NpcBehaviac::Array01[7])" />
                        <property Opr="const bool false" />
                      </node>
                      <node class="Sequence" id="49">
                        <node class="Condition" id="50">
                          <property Operator="Equal" />
                          <property Opl="Self.NpcBehaviac::IsInRangeOfPlayerNpc(int Self.NpcBehaviac::Array01[6])" />
                          <property Opr="const bool false" />
                        </node>
                        <node class="Action" id="51">
                          <property Method="Self.NpcBehaviac::MoveToPlayer()" />
                          <property ResultOption="BT_SUCCESS" />
                        </node>
                      </node>
                      <node class="Noop" id="23" />
                    </node>
                  </node>
                  <node class="IfElse" id="17">
                    <node class="Condition" id="18">
                      <property Operator="GreaterEqual" />
                      <property Opl="Self.BaseBehaviac::GetFrameSynRunTime()" />
                      <property Opr="int Self.NpcBehaviac::Array07[5]" />
                    </node>
                    <node class="IfElse" id="25">
                      <node class="Condition" id="26">
                        <property Operator="Equal" />
                        <property Opl="Self.NpcBehaviac::IsInRangeOfPlayerNpc(int Self.NpcBehaviac::Array07[4])" />
                        <property Opr="const bool true" />
                      </node>
                      <node class="Sequence" id="19">
                        <node class="Action" id="20">
                          <property Method="Self.NpcBehaviac::DoSkill(int Self.NpcBehaviac::Array07[1])" />
                          <property ResultOption="BT_SUCCESS" />
                        </node>
                        <node class="Compute" id="21">
                          <property Operator="Add" />
                          <property Opl="int Self.NpcBehaviac::Array07[5]" />
                          <property Opr1="int Self.NpcBehaviac::Array07[2]" />
                          <property Opr2="Self.BaseBehaviac::GetFrameSynRunTime()" />
                        </node>
                      </node>
                      <node class="Sequence" id="52">
                        <node class="Condition" id="54">
                          <property Operator="Equal" />
                          <property Opl="Self.NpcBehaviac::IsInRangeOfPlayerNpc(int Self.NpcBehaviac::Array07[4])" />
                          <property Opr="const bool false" />
                        </node>
                        <node class="Action" id="56">
                          <property Method="Self.NpcBehaviac::MoveToPlayer()" />
                          <property ResultOption="BT_SUCCESS" />
                        </node>
                      </node>
                    </node>
                    <node class="Noop" id="22" />
                  </node>
                </node>
                <node class="ReferencedBehavior" id="4">
                  <property ReferenceBehavior="const string &quot;Npc/Ai/Comm_Patrol&quot;" />
                  <property Task="Self.BaseBehaviac::TaskArrayIntRef(vector&lt;int&gt; Self.NpcBehaviac::Array04)" />
                </node>
              </node>
            </node>
          </node>
        </node>
      </node>
    </node>
    <node class="Sequence" id="7">
      <attachment class="Precondition" id="8" flag="precondition">
        <property BinaryOperator="And" />
        <property Operator="Equal" />
        <property Opl="Self.BaseBehaviac::IsCurCallType(Event)" />
        <property Opr2="const bool true" />
        <property Phase="Enter" />
      </attachment>
      <attachment class="Precondition" id="9" flag="precondition">
        <property BinaryOperator="And" />
        <property Operator="Equal" />
        <property Opl="Self.BaseBehaviac::IsTargetGameEvent(Npc_OnStart)" />
        <property Opr2="const bool true" />
        <property Phase="Enter" />
      </attachment>
      <node class="Assignment" id="65">
        <property CastRight="false" />
        <property Opl="int Self.NpcBehaviac::Int01" />
        <property Opr="const int 150" />
      </node>
      <node class="Assignment" id="69">
        <property CastRight="false" />
        <property Opl="int Self.NpcBehaviac::Int03" />
        <property Opr="const int 15" />
      </node>
      <node class="Assignment" id="66">
        <property CastRight="false" />
        <property Opl="int Self.NpcBehaviac::Int04" />
        <property Opr="const int 180" />
      </node>
      <node class="Assignment" id="67">
        <property CastRight="false" />
        <property Opl="int Self.NpcBehaviac::Int05" />
        <property Opr="const int 5" />
      </node>
      <node class="Assignment" id="70">
        <property CastRight="false" />
        <property Opl="vector&lt;int&gt; Self.NpcBehaviac::Array05" />
        <property Opr="const vector&lt;int&gt; 3:5|5|0" />
      </node>
      <node class="Assignment" id="71">
        <property CastRight="false" />
        <property Opl="vector&lt;int&gt; Self.NpcBehaviac::Array04" />
        <property Opr="const vector&lt;int&gt; 5:20|5000|0|150|0" />
      </node>
      <node class="Assignment" id="72">
        <property CastRight="false" />
        <property Opl="vector&lt;int&gt; Self.NpcBehaviac::Array06" />
        <property Opr="const vector&lt;int&gt; 5:0|1000|3500|30|90" />
      </node>
      <node class="Assignment" id="75">
        <property CastRight="false" />
        <property Opl="vector&lt;int&gt; Self.NpcBehaviac::Array07" />
        <property Opr="const vector&lt;int&gt; 6:0|20201|5000|0|60|0" />
      </node>
      <node class="Assignment" id="76">
        <property CastRight="false" />
        <property Opl="vector&lt;int&gt; Self.NpcBehaviac::Array01" />
        <property Opr="const vector&lt;int&gt; 27:0|0|10000|1000|3000|1000|0|50|0|0|0|0|0|0|0|0|0|1|0|0|10|0|20201|0|20202|0|30" />
      </node>
      <node class="Assignment" id="10">
        <property CastRight="false" />
        <property Opl="vector&lt;int&gt; Self.NpcBehaviac::Array08" />
        <property Opr="const vector&lt;int&gt; 6:0|40500|5000|0|15|0" />
      </node>
    </node>
  </node>
</behavior>